--script to set up Project Database
--CREATE DATABASE Project;

--create the profile table
CREATE TABLE Profile(
  ProfileID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, 
  FirstName NVARCHAR(10) NOT NULL,
  MiddleName NVARCHAR(10),
  LastName NVARCHAR(10) NOT NULL,
  Description NVARCHAR(255) NOT NULL
);

--create the user table
CREATE TABLE User(
   Username NVARCHAR(20) PRIMARY KEY NOT NULL, 
   Email NVARCHAR(100) NOT NULL,
   Password NVARCHAR(20) NOT NULL
);

--create the post table
CREATE TABLE Post(
   --PostID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, --ADD !
   Title NVARCHAR(20) PRIMARY KEY NOT NULL, 
   Date TEXT NOT NULL,          --Stored as ISO8601 strings ("YYYY-MM-DD HH:MM:SS.SSS")
   Photo NVARCHAR(100) NOT NULL,      --contains filename for the photo
   TextContent NVARCHAR(255) NOT NULL,
   City NVARCHAR(50) NOT NULL,
   State NVARCHAR(50) NOT NULL,
   Country NVARCHAR(50) NOT NULL
);

--create the blog table
CREATE TABLE Blog(
   Name NVARCHAR(20) PRIMARY KEY NOT NULL, 
   Description NVARCHAR(255) NOT NULL
);

--create the NatureItem table
CREATE TABLE NatureItem(
   SpeciesID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
   Species NVARCHAR(200) NOT NULL, 
   Characteristics NVARCHAR(255) NOT NULL
);

--create the has table
CREATE TABLE Has(
  ProfileID INTEGER NOT NULL, 
  Username NVARCHAR(20) NOT NULL, 
  CONSTRAINT fk_profile_has FOREIGN KEY (ProfileID) REFERENCES Profile(ProfileID),
  CONSTRAINT fk_user_has FOREIGN KEY (Username) REFERENCES User(Username)
);

--create the Runs table
CREATE TABLE Runs(
  Username NVARCHAR(20) NOT NULL,
  Name NVARCHAR(20) NOT NULL,  
  CONSTRAINT fk_name_runs FOREIGN KEY (Name) REFERENCES Blog(Name),
  CONSTRAINT fk_username_runs FOREIGN KEY (Username) REFERENCES User(Username)
);

--create the Contains table
CREATE TABLE Contains(
  Name NVARCHAR(20) NOT NULL,  
  Title NVARCHAR(20) NOT NULL, 
  Date TEXT NOT NULL, 
  CONSTRAINT fk_blog_contains FOREIGN KEY (Name) REFERENCES Blog(Name),
  CONSTRAINT fk_postTitle_contains FOREIGN KEY (Title) REFERENCES Post(Title),
  CONSTRAINT fk_postDate_contains FOREIGN KEY (Date) REFERENCES Post(Date)           
);

--create the Follow table
CREATE TABLE Follows(
  Username NVARCHAR(20) NOT NULL,
  Name NVARCHAR(20) NOT NULL,  
  CONSTRAINT fk_user_follows FOREIGN KEY (Username) REFERENCES User(Username),
  CONSTRAINT fk_blog_follows FOREIGN KEY (Name) REFERENCES Blog(Name)
);

--create the Comments_on table
CREATE TABLE Comments_On(
  Username NVARCHAR(20) NOT NULL,
  Title NVARCHAR(20) NOT NULL, 
  Date TEXT NOT NULL, 
  Timestamp TEXT PRIMARY KEY NOT NULL, --look for a time data type
  CONSTRAINT fk_user_comments_on FOREIGN KEY (Username) REFERENCES User(Username),
  CONSTRAINT fk_post_comments_on FOREIGN KEY (Title) REFERENCES Post(Title),
  CONSTRAINT fk_post_comments_on FOREIGN KEY (Date) REFERENCES Post(Date)        
);

--create the affiliated table
CREATE TABLE Affiliated(
  SpeciesID INTEGER NOT NULL,
  Title NVARCHAR(20) NOT NULL, 
  Date TEXT NOT NULL, 
  CONSTRAINT fk_natureitem_affiliated FOREIGN KEY (SpeciesID) REFERENCES NatureItem(SpeciesID),
  CONSTRAINT fk_post_affiliated FOREIGN KEY (Title) REFERENCES Post(Title),
  CONSTRAINT fk_post_affiliated FOREIGN KEY (Date) REFERENCES Post(Date)            
);

